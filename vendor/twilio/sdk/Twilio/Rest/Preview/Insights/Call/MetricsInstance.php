<?php

/**
 * This code was generated by
 * \ / _    _  _|   _  _
 * | (_)\/(_)(_|\/| |(/_  v1.0.0
 * /       /
 */

namespace Twilio\Rest\Preview\Insights\Call;

use Twilio\Deserialize;
use Twilio\Exceptions\TwilioException;
use Twilio\InstanceResource;
use Twilio\Version;

/**
 * @property string callSid
 * @property string totalBytesReceived
 * @property string totalPacketsReceived
 * @property string totalBytesSent
 * @property string mos
 * @property \DateTime timestamp
 * @property string totalPacketsSent
 * @property string audioLevelIn
 * @property string audioLevelOut
 * @property string packetsReceived
 * @property string jitter
 * @property string timestampMs
 * @property string rtt
 * @property string packetsLost
 * @property string totalPacketsLost
 * @property string packetsLostFraction
 */
class MetricsInstance extends InstanceResource {
    /**
     * Initialize the MetricsInstance
     * 
     * @param \Twilio\Version $version Version that contains the resource
     * @param mixed[] $payload The response payload
     * @param string $sid The sid
     * @return \Twilio\Rest\Preview\Insights\Call\MetricsInstance 
     */
    public function __construct(Version $version, array $payload, $sid) {
        parent::__construct($version);
        
        // Marshaled Properties
        $this->properties = array(
            'callSid' => $payload['call_sid'],
            'totalBytesReceived' => $payload['total_bytes_received'],
            'totalPacketsReceived' => $payload['total_packets_received'],
            'totalBytesSent' => $payload['total_bytes_sent'],
            'mos' => $payload['mos'],
            'timestamp' => Deserialize::iso8601DateTime($payload['timestamp']),
            'totalPacketsSent' => $payload['total_packets_sent'],
            'audioLevelIn' => $payload['audio_level_in'],
            'audioLevelOut' => $payload['audio_level_out'],
            'packetsReceived' => $payload['packets_received'],
            'jitter' => $payload['jitter'],
            'timestampMs' => $payload['timestamp_ms'],
            'rtt' => $payload['rtt'],
            'packetsLost' => $payload['packets_lost'],
            'totalPacketsLost' => $payload['total_packets_lost'],
            'packetsLostFraction' => $payload['packets_lost_fraction'],
        );
        
        $this->solution = array(
            'sid' => $sid,
        );
    }

    /**
     * Magic getter to access properties
     * 
     * @param string $name Property to access
     * @return mixed The requested property
     * @throws TwilioException For unknown properties
     */
    public function __get($name) {
        if (array_key_exists($name, $this->properties)) {
            return $this->properties[$name];
        }
        
        if (property_exists($this, '_' . $name)) {
            $method = 'get' . ucfirst($name);
            return $this->$method();
        }
        
        throw new TwilioException('Unknown property: ' . $name);
    }

    /**
     * Provide a friendly representation
     * 
     * @return string Machine friendly representation
     */
    public function __toString() {
        return '[Twilio.Preview.Insights.MetricsInstance]';
    }
}